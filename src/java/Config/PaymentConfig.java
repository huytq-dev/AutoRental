package Config;

import java.io.InputStream;
import java.util.Properties;
import java.util.logging.Level;
import java.util.logging.Logger;

import io.github.cdimascio.dotenv.Dotenv;

/**
 * L·ªõp c·∫•u h√¨nh VNPay - Qu·∫£n l√Ω th√¥ng tin x√°c th·ª±c thanh to√°n
 *
 * Ch·ª©c nƒÉng ch√≠nh: - ƒê·ªçc th√¥ng tin c·∫•u h√¨nh VNPay t·ª´ nhi·ªÅu ngu·ªìn kh√°c nhau - ∆Øu
 * ti√™n: Bi·∫øn m√¥i tr∆∞·ªùng h·ªá th·ªëng ‚Üí File .env ‚Üí File payment.properties - Cung
 * c·∫•p c√°c ph∆∞∆°ng th·ª©c ƒë·ªÉ l·∫•y th√¥ng tin c·∫•u h√¨nh VNPay
 *
 * @author Nh√≥m SWP
 */
public class PaymentConfig {

    // Logger ƒë·ªÉ ghi log qu√° tr√¨nh c·∫•u h√¨nh
    private static final Logger LOGGER = Logger.getLogger(PaymentConfig.class.getName());

    // ƒê·ªëi t∆∞·ª£ng ƒë·ªÉ ƒë·ªçc file .env
    private static Dotenv dotenv;

    // ƒê·ªëi t∆∞·ª£ng ƒë·ªÉ ƒë·ªçc file payment.properties
    private static Properties properties;

    /**
     * Kh·ªëi static - Ch·∫°y khi class ƒë∆∞·ª£c load l·∫ßn ƒë·∫ßu Nhi·ªám v·ª•: Kh·ªüi t·∫°o v√† load
     * c·∫•u h√¨nh t·ª´ c√°c ngu·ªìn kh√°c nhau
     */
    static {
        LOGGER.info("=== B·∫ÆT ƒê·∫¶U KH·ªûI T·∫†O C·∫§U H√åNH VNPAY ===");

        // B∆Ø·ªöC 1: Kh·ªüi t·∫°o file .env
        initializeEnvFile();

        // B∆Ø·ªöC 2: Kh·ªüi t·∫°o file payment.properties
        initializePropertiesFile();

        LOGGER.info("=== HO√ÄN TH√ÄNH KH·ªûI T·∫†O C·∫§U H√åNH VNPAY ===");
    }

    /**
     * Kh·ªüi t·∫°o file .env ƒê·ªçc file .env t·ª´ th∆∞ m·ª•c g·ªëc c·ªßa d·ª± √°n
     */
    private static void initializeEnvFile() {
        try {
            // C·∫•u h√¨nh v√† load file .env
            dotenv = Dotenv.configure()
                    .ignoreIfMissing() // Kh√¥ng b√°o l·ªói n·∫øu thi·∫øu file
                    .ignoreIfMalformed() // Kh√¥ng b√°o l·ªói n·∫øu file c√≥ l·ªói format
                    .load();                       // Th·ª±c hi·ªán load file

            // Ki·ªÉm tra xem c√≥ load th√†nh c√¥ng kh√¥ng
            if (dotenv != null && dotenv.get("VNPAY_TMN_CODE") != null) {
                LOGGER.info("‚úÖ ƒê√£ load th√†nh c√¥ng file .env");
                LOGGER.info("‚úÖ VNPAY_TMN_CODE t·ª´ .env: " + dotenv.get("VNPAY_TMN_CODE"));
            } else {
                LOGGER.info("‚ö†Ô∏è Kh√¥ng t√¨m th·∫•y file .env ho·∫∑c kh√¥ng c√≥ VNPAY_TMN_CODE, s·ª≠ d·ª•ng payment.properties");
            }

        } catch (Exception e) {
            LOGGER.log(Level.INFO, "‚ö†Ô∏è Kh√¥ng th·ªÉ load file .env: " + e.getMessage());
            dotenv = null;
        }
    }
    
    /**
     * Kh·ªüi t·∫°o file payment.properties ƒê·ªçc file payment.properties t·ª´ th∆∞ m·ª•c
     * resources
     */
    private static void initializePropertiesFile() {
        try {
            properties = new Properties();

            // ƒê·ªçc file payment.properties t·ª´ classpath (th∆∞ m·ª•c resources)
            InputStream inputStream = PaymentConfig.class.getClassLoader()
                    .getResourceAsStream("payment.properties");

            if (inputStream != null) {
                properties.load(inputStream);
                LOGGER.info("‚úÖ ƒê√£ load th√†nh c√¥ng file payment.properties");
                inputStream.close();
            } else {
                LOGGER.warning("‚ö†Ô∏è Kh√¥ng t√¨m th·∫•y file payment.properties");
            }

        } catch (Exception e) {
            LOGGER.log(Level.WARNING, "‚ùå L·ªói khi load file payment.properties: " + e.getMessage(), e);
            properties = null;
        }
    }

    /**
     * Ph∆∞∆°ng th·ª©c ch√≠nh ƒë·ªÉ l·∫•y gi√° tr·ªã c·∫•u h√¨nh Th·ª© t·ª± ∆∞u ti√™n: System
     * Environment ‚Üí File .env ‚Üí File payment.properties
     *
     * @param environmentVariableName T√™n bi·∫øn m√¥i tr∆∞·ªùng c·∫ßn l·∫•y
     * @return Gi√° tr·ªã c·ªßa bi·∫øn m√¥i tr∆∞·ªùng
     * @throws RuntimeException N·∫øu kh√¥ng t√¨m th·∫•y bi·∫øn m√¥i tr∆∞·ªùng ·ªü b·∫•t k·ª≥
     * ngu·ªìn n√†o
     */
    private static String getConfigValue(String environmentVariableName) {
        LOGGER.info("üîç ƒêang t√¨m bi·∫øn m√¥i tr∆∞·ªùng: " + environmentVariableName);

        // ∆ØU TI√äN 1: Bi·∫øn m√¥i tr∆∞·ªùng h·ªá th·ªëng
        String systemEnvValue = System.getenv(environmentVariableName);
        if (systemEnvValue != null && !systemEnvValue.isEmpty()) {
            LOGGER.info("‚úÖ T√¨m th·∫•y trong bi·∫øn m√¥i tr∆∞·ªùng h·ªá th·ªëng: " + environmentVariableName);
            return systemEnvValue;
        }

        // ∆ØU TI√äN 2: File .env
        if (dotenv != null) {
            String envFileValue = dotenv.get(environmentVariableName);
            if (envFileValue != null && !envFileValue.isEmpty()) {
                LOGGER.info("‚úÖ T√¨m th·∫•y trong file .env: " + environmentVariableName);
                return envFileValue;
            }
        }

        // ∆ØU TI√äN 3: File payment.properties (chuy·ªÉn ƒë·ªïi t√™n bi·∫øn)
        if (properties != null) {
            String propertyName = convertToPropertyName(environmentVariableName);
            String propertyValue = properties.getProperty(propertyName);
            if (propertyValue != null && !propertyValue.isEmpty()) {
                LOGGER.info("‚úÖ T√¨m th·∫•y trong payment.properties: " + propertyName);
                return propertyValue;
            }
        }

        // N·∫øu kh√¥ng t√¨m th·∫•y ·ªü ƒë√¢u c·∫£, b√°o l·ªói
        String errorMessage = "‚ùå Kh√¥ng t√¨m th·∫•y bi·∫øn m√¥i tr∆∞·ªùng: " + environmentVariableName;
        LOGGER.severe(errorMessage);
        throw new RuntimeException(errorMessage);
    }

    /**
     * Chuy·ªÉn ƒë·ªïi t√™n bi·∫øn m√¥i tr∆∞·ªùng sang t√™n trong file properties V√≠ d·ª•:
     * VNPAY_TMN_CODE ‚Üí vnpay.tmn.code
     *
     * @param environmentVariableName T√™n bi·∫øn m√¥i tr∆∞·ªùng
     * @return T√™n t∆∞∆°ng ·ª©ng trong file properties
     */
    private static String convertToPropertyName(String environmentVariableName) {
        switch (environmentVariableName) {
            case "VNPAY_TMN_CODE":
                return "vnpay.tmn.code";
            case "VNPAY_HASH_SECRET":
                return "vnpay.hash.secret";
            case "VNPAY_PAY_URL":
                return "vnpay.pay.url";
            case "VNPAY_RETURN_URL":
                return "vnpay.return.url";
            case "VNPAY_CANCEL_URL":
                return "vnpay.cancel.url";
            case "VNPAY_ERROR_URL":
                return "vnpay.error.url";
            case "VNPAY_API_URL":
                return "vnpay.api.url";
            default:
                // Chuy·ªÉn ƒë·ªïi m·∫∑c ƒë·ªãnh: VNPAY_TMN_CODE ‚Üí vnpay.tmn.code
                return environmentVariableName.toLowerCase().replace("_", ".");
        }
    }

    // ===================================================================
    // C√ÅC PH∆Ø∆†NG TH·ª®C PUBLIC ƒê·ªÇ L·∫§Y TH√îNG TIN C·∫§U H√åNH VNPAY
    // ===================================================================
    /**
     * L·∫•y VNPay Terminal/Merchant Code
     *
     * @return Terminal Code ƒë·ªÉ x√°c th·ª±c v·ªõi VNPay
     */
    public static String getTmnCode() {
        return getConfigValue("VNPAY_TMN_CODE");
    }

    /**
     * L·∫•y VNPay Hash Secret
     *
     * @return Hash Secret ƒë·ªÉ t·∫°o ch·ªØ k√Ω b·∫£o m·∫≠t
     */
    public static String getHashSecret() {
        return getConfigValue("VNPAY_HASH_SECRET");
    }
    
    /**
     * L·∫•y VNPay Payment URL
     *
     * @return Payment URL ƒë·ªÉ redirect kh√°ch h√†ng
     */
    public static String getPayUrl() {
        return getConfigValue("VNPAY_PAY_URL");
    }

    /**
     * L·∫•y URL chuy·ªÉn h∆∞·ªõng khi thanh to√°n th√†nh c√¥ng/th·∫•t b·∫°i
     *
     * @return Return URL
     */
    public static String getReturnUrl() {
        return getConfigValue("VNPAY_RETURN_URL");
    }
    
    /**
     * L·∫•y URL chuy·ªÉn h∆∞·ªõng khi h·ªßy thanh to√°n
     *
     * @return Cancel URL
     */
    public static String getCancelUrl() {
        return getConfigValue("VNPAY_CANCEL_URL");
    }

    /**
     * L·∫•y URL chuy·ªÉn h∆∞·ªõng khi c√≥ l·ªói thanh to√°n
     *
     * @return Error URL
     */
    public static String getErrorUrl() {
        return getConfigValue("VNPAY_ERROR_URL");
    }
    
    /**
     * L·∫•y VNPay API Base URL
     *
     * @return VNPay API Base URL
     */
    public static String getVNPayApiUrl() {
        try {
            return getConfigValue("VNPAY_API_URL");
        } catch (RuntimeException e) {
            // Fallback to default VNPay API URL
            LOGGER.info("‚ö†Ô∏è Kh√¥ng t√¨m th·∫•y VNPAY_API_URL, s·ª≠ d·ª•ng URL m·∫∑c ƒë·ªãnh");
            return "https://sandbox.vnpayment.vn/merchant_webapi/api/transaction";
    }
    }
}
